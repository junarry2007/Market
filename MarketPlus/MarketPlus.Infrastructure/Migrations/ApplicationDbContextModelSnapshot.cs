// <auto-generated />
using System;
using MarketPlus.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketPlus.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("MarketPlus.Domain.Products.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasComment("Creation audit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT")
                        .HasComment("Delete audit");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasComment("Product description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasComment("Product name");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true)
                        .HasComment("Product status with default value in true");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasComment("Produc quantity");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasComment("Update audit");

                    b.HasKey("Id");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6e3cd29-04b3-47d0-9d89-08bf50888237"),
                            CreatedAt = new DateTime(2024, 7, 25, 7, 10, 33, 143, DateTimeKind.Local).AddTicks(7080),
                            Description = "Guayos futbol",
                            Name = "Guayos",
                            Status = true,
                            Stock = 5
                        },
                        new
                        {
                            Id = new Guid("8a3b695a-ca34-4b22-8ce4-36fc2ff5710c"),
                            CreatedAt = new DateTime(2024, 7, 25, 7, 10, 33, 143, DateTimeKind.Local).AddTicks(7119),
                            Description = "Camiseta oficial de colombia",
                            Name = "Camiseta",
                            Status = true,
                            Stock = 10
                        },
                        new
                        {
                            Id = new Guid("d579c47e-b292-4b39-848c-0cc4d4771f15"),
                            CreatedAt = new DateTime(2024, 7, 25, 7, 10, 33, 143, DateTimeKind.Local).AddTicks(7121),
                            Description = "Balón copa america",
                            Name = "Balon",
                            Status = true,
                            Stock = 15
                        });
                });

            modelBuilder.Entity("MarketPlus.Domain.Products.Product", b =>
                {
                    b.OwnsOne("MarketPlus.Domain.Products.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(10)
                                .HasColumnType("TEXT");

                            b1.HasKey("ProductId");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
